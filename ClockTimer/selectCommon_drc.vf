////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : selectCommon_drc.vf
// /___/   /\     Timestamp : 10/27/2020 21:59:31
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: E:\digit_program\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family spartan6 -verilog selectCommon_drc.vf -w E:/digit_program/project/ClockTimer/selectCommon.sch
//Design Name: selectCommon
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_selectCommon (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_selectCommon(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module selectCommon(clk_select, 
                    com0, 
                    com1, 
                    com2, 
                    com3);

    input clk_select;
   output com0;
   output com1;
   output com2;
   output com3;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_18;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   
   (* HU_SET = "XLXI_1_0" *) 
   CB2CE_HXILINX_selectCommon  XLXI_1 (.C(clk_select), 
                                      .CE(XLXN_1), 
                                      .CLR(XLXN_2), 
                                      .CEO(), 
                                      .Q0(XLXN_4), 
                                      .Q1(XLXN_5), 
                                      .TC());
   VCC  XLXI_2 (.P(XLXN_1));
   GND  XLXI_3 (.G(XLXN_2));
   (* HU_SET = "XLXI_4_1" *) 
   M4_1E_HXILINX_selectCommon  XLXI_4 (.D0(XLXN_29), 
                                      .D1(XLXN_30), 
                                      .D2(XLXN_30), 
                                      .D3(XLXN_30), 
                                      .E(XLXN_6), 
                                      .S0(XLXN_4), 
                                      .S1(XLXN_5), 
                                      .O(com0));
   VCC  XLXI_5 (.P(XLXN_6));
   (* HU_SET = "XLXI_6_4" *) 
   M4_1E_HXILINX_selectCommon  XLXI_6 (.D0(XLXN_30), 
                                      .D1(XLXN_33), 
                                      .D2(XLXN_30), 
                                      .D3(XLXN_30), 
                                      .E(XLXN_18), 
                                      .S0(XLXN_4), 
                                      .S1(XLXN_5), 
                                      .O(com1));
   (* HU_SET = "XLXI_7_2" *) 
   M4_1E_HXILINX_selectCommon  XLXI_7 (.D0(XLXN_30), 
                                      .D1(XLXN_30), 
                                      .D2(XLXN_34), 
                                      .D3(XLXN_30), 
                                      .E(XLXN_27), 
                                      .S0(XLXN_4), 
                                      .S1(XLXN_5), 
                                      .O(com2));
   (* HU_SET = "XLXI_8_3" *) 
   M4_1E_HXILINX_selectCommon  XLXI_8 (.D0(XLXN_30), 
                                      .D1(XLXN_30), 
                                      .D2(XLXN_30), 
                                      .D3(XLXN_35), 
                                      .E(XLXN_28), 
                                      .S0(XLXN_4), 
                                      .S1(XLXN_5), 
                                      .O(com3));
   VCC  XLXI_9 (.P(XLXN_18));
   VCC  XLXI_11 (.P(XLXN_27));
   VCC  XLXI_12 (.P(XLXN_28));
   VCC  XLXI_13 (.P(XLXN_29));
   GND  XLXI_14 (.G(XLXN_30));
   VCC  XLXI_16 (.P(XLXN_33));
   VCC  XLXI_17 (.P(XLXN_34));
   VCC  XLXI_18 (.P(XLXN_35));
endmodule
